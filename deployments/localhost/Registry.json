{
  "address": "0xFE5f411481565fbF70D8D33D992C78196E014b90",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "moduleId",
          "type": "bytes32"
        }
      ],
      "name": "ContractChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "moduleId",
          "type": "bytes32"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernance",
          "type": "address"
        }
      ],
      "name": "GovernanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "moduleId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "ModuleSwitched",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "addNewContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newContractAddress",
          "type": "address"
        }
      ],
      "name": "changeContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "changeGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getModuleKeys",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "moduleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "moduleKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activated",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "positionManagerFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_positionManagerFactory",
          "type": "address"
        }
      ],
      "name": "setPositionManagerFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_activated",
          "type": "bool"
        }
      ],
      "name": "switchModuleState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x22e8c280047b8c20631a132d0d5e8e9a697cf38dde99cc753db1002facb202aa",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xFE5f411481565fbF70D8D33D992C78196E014b90",
    "transactionIndex": 0,
    "gasUsed": "594308",
    "logsBloom": "0x
    "blockHash": "0xf847113db62294e6980821892f129a2f3b3bc1b44220540e69ff1da05ea3585b",
    "transactionHash": "0x22e8c280047b8c20631a132d0d5e8e9a697cf38dde99cc753db1002facb202aa",
    "logs": [],
    "blockNumber": 14723799,
    "cumulativeGasUsed": "594308",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "e37913ab496d937cc6477b2e54359c29",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"}],\"name\":\"ContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ModuleSwitched\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"addNewContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newContractAddress\",\"type\":\"address\"}],\"name\":\"changeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"changeGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModuleKeys\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"moduleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"moduleKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"activated\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManagerFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_positionManagerFactory\",\"type\":\"address\"}],\"name\":\"setPositionManagerFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_activated\",\"type\":\"bool\"}],\"name\":\"switchModuleState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractChanged(address,address,bytes32)\":{\"params\":{\"moduleId\":\"keccak of module name\",\"newContract\":\"address of the contract after update\",\"oldContract\":\"address of the contract before update\"}},\"ContractCreated(address,bytes32)\":{\"params\":{\"moduleId\":\"keccak of module name\",\"newContract\":\"address of the new contract\"}},\"GovernanceChanged(address)\":{\"params\":{\"newGovernance\":\"the new governance address\"}},\"ModuleSwitched(bytes32,bool)\":{\"params\":{\"isActive\":\"true if module is switched on, false otherwise\",\"moduleId\":\"keccak of module name\"}}},\"kind\":\"dev\",\"methods\":{\"addNewContract(bytes32,address)\":{\"params\":{\"_contractAddress\":\"address of the new module\",\"_id\":\"keccak256 of module id string\"}},\"changeContract(bytes32,address)\":{\"params\":{\"_id\":\"keccak256 of module id string\",\"_newContractAddress\":\"address of the new module\"}},\"changeGovernance(address)\":{\"params\":{\"_governance\":\"the address of the new governance\"}},\"getModuleKeys()\":{\"returns\":{\"_0\":\"bytes32[] all module keys\"}},\"isActive(bytes32)\":{\"params\":{\"_id\":\"keccak256 of module id string\"},\"returns\":{\"_0\":\"bool activated\"}},\"moduleAddress(bytes32)\":{\"params\":{\"_id\":\"keccak256 of module id string\"},\"returns\":{\"_0\":\"address of the module\"}},\"setPositionManagerFactory(address)\":{\"params\":{\"_positionManagerFactory\":\"the address of the position manager factory\"}},\"switchModuleState(bytes32,bool)\":{\"params\":{\"_activated\":\"boolean to activate or deactivate module\",\"_id\":\"keccak256 of module id string\"}}},\"stateVariables\":{\"governance\":{\"return\":\"address of Governance\"},\"positionManagerFactoryAddress\":{\"return\":\"address of PositionManagerFactory\"}},\"title\":\"Stores all the modules addresses\",\"version\":1},\"userdoc\":{\"events\":{\"ContractChanged(address,address,bytes32)\":{\"notice\":\"emitted when a contract address is updated\"},\"ContractCreated(address,bytes32)\":{\"notice\":\"emitted when a contract is added to registry\"},\"GovernanceChanged(address)\":{\"notice\":\"emitted when governance address is changed\"},\"ModuleSwitched(bytes32,bool)\":{\"notice\":\"emitted when a module is switched on/off\"}},\"kind\":\"user\",\"methods\":{\"addNewContract(bytes32,address)\":{\"notice\":\"Register a module\"},\"changeContract(bytes32,address)\":{\"notice\":\"Changes a module's address\"},\"changeGovernance(address)\":{\"notice\":\"change the address of the governance\"},\"getModuleKeys()\":{\"notice\":\"Get the keys for all modules\"},\"governance()\":{\"notice\":\"return the address of Governance\"},\"isActive(bytes32)\":{\"notice\":\"Get the state of a module\"},\"moduleAddress(bytes32)\":{\"notice\":\"Get the address of a module for a given key\"},\"positionManagerFactoryAddress()\":{\"notice\":\"return the address of PositionManagerFactory\"},\"setPositionManagerFactory(address)\":{\"notice\":\"sets the Position manager factory address\"},\"switchModuleState(bytes32,bool)\":{\"notice\":\"Toggle global state of a module\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport '../interfaces/IRegistry.sol';\\n\\n/// @title Stores all the modules addresses\\ncontract Registry is IRegistry {\\n    address public override governance;\\n    address public override positionManagerFactoryAddress;\\n\\n    mapping(bytes32 => Entry) public modules;\\n    bytes32[] public moduleKeys;\\n\\n    ///@notice emitted when governance address is changed\\n    ///@param newGovernance the new governance address\\n    event GovernanceChanged(address newGovernance);\\n\\n    ///@notice emitted when a contract is added to registry\\n    ///@param newContract address of the new contract\\n    ///@param moduleId keccak of module name\\n    event ContractCreated(address newContract, bytes32 moduleId);\\n\\n    ///@notice emitted when a contract address is updated\\n    ///@param oldContract address of the contract before update\\n    ///@param newContract address of the contract after update\\n    ///@param moduleId keccak of module name\\n    event ContractChanged(address oldContract, address newContract, bytes32 moduleId);\\n\\n    ///@notice emitted when a module is switched on/off\\n    ///@param moduleId keccak of module name\\n    ///@param isActive true if module is switched on, false otherwise\\n    event ModuleSwitched(bytes32 moduleId, bool isActive);\\n\\n    constructor(address _governance) {\\n        governance = _governance;\\n    }\\n\\n    ///@notice sets the Position manager factory address\\n    ///@param _positionManagerFactory the address of the position manager factory\\n    function setPositionManagerFactory(address _positionManagerFactory) external onlyGovernance {\\n        positionManagerFactoryAddress = _positionManagerFactory;\\n    }\\n\\n    ///@notice change the address of the governance\\n    ///@param _governance the address of the new governance\\n    function changeGovernance(address _governance) external onlyGovernance {\\n        governance = _governance;\\n        emit GovernanceChanged(_governance);\\n    }\\n\\n    ///@notice Register a module\\n    ///@param _id keccak256 of module id string\\n    ///@param _contractAddress address of the new module\\n    function addNewContract(bytes32 _id, address _contractAddress) external onlyGovernance {\\n        require(modules[_id].contractAddress == address(0), 'Registry::addNewContract: Entry already exists.');\\n        modules[_id] = Entry({contractAddress: _contractAddress, activated: true});\\n        moduleKeys.push(_id);\\n        emit ContractCreated(_contractAddress, _id);\\n    }\\n\\n    ///@notice Changes a module's address\\n    ///@param _id keccak256 of module id string\\n    ///@param _newContractAddress address of the new module\\n    function changeContract(bytes32 _id, address _newContractAddress) external onlyGovernance {\\n        require(modules[_id].contractAddress != address(0), 'Registry::changeContract: Entry does not exist.');\\n        //Begin timelock\\n        emit ContractChanged(modules[_id].contractAddress, _newContractAddress, _id);\\n        modules[_id].contractAddress = _newContractAddress;\\n    }\\n\\n    ///@notice Toggle global state of a module\\n    ///@param _id keccak256 of module id string\\n    ///@param _activated boolean to activate or deactivate module\\n    function switchModuleState(bytes32 _id, bool _activated) external onlyGovernance {\\n        require(modules[_id].contractAddress != address(0), 'Registry::switchModuleState: Entry does not exist.');\\n        modules[_id].activated = _activated;\\n        emit ModuleSwitched(_id, _activated);\\n    }\\n\\n    ///@notice Get the keys for all modules\\n    ///@return bytes32[] all module keys\\n    function getModuleKeys() external view override returns (bytes32[] memory) {\\n        return moduleKeys;\\n    }\\n\\n    ///@notice Get the address of a module for a given key\\n    ///@param _id keccak256 of module id string\\n    ///@return address of the module\\n    function moduleAddress(bytes32 _id) external view override returns (address) {\\n        return modules[_id].contractAddress;\\n    }\\n\\n    ///@notice Get the state of a module\\n    ///@param _id keccak256 of module id string\\n    ///@return bool activated\\n    function isActive(bytes32 _id) public view override returns (bool) {\\n        return modules[_id].activated;\\n    }\\n\\n    ///@notice modifier to check if the sender is the governance contract\\n    modifier onlyGovernance() {\\n        require(msg.sender == governance, 'Registry::onlyGovernance: Call must come from governance.');\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x63118648d59b9e750c360bb54f853fdd6023215047c64bc2a59700841f1ecdec\",\"license\":\"MIT\"},\"interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\ninterface IRegistry {\\n    struct Entry {\\n        address contractAddress;\\n        bool activated;\\n    }\\n\\n    ///@notice return the address of PositionManagerFactory\\n    ///@return address of PositionManagerFactory\\n    function positionManagerFactoryAddress() external view returns (address);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function governance() external view returns (address);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function getModuleKeys() external view returns (bytes32[] memory);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function isActive(bytes32 _id) external view returns (bool);\\n\\n    ///@notice return the address of Governance\\n    ///@return address of Governance\\n    function moduleAddress(bytes32 _id) external view returns (address);\\n}\\n\",\"keccak256\":\"0xc9ac40213cdcd9d734141b4ec6082e61774ad990786abc546fa400da991e6cfb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109e93803806109e983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610958806100916000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806399572d6f1161007157806399572d6f1461013c5780639d0d9ffe1461014f578063aa10e9f014610162578063b0b6cc1a14610175578063d93194f114610196578063e63013d9146101b6576100b4565b8063214fa760146100b95780632d2c5b58146100ce57806332fa3561146100ec5780633a8141cc146100ff5780635aa6e675146101145780635c36901c1461011c575b600080fd5b6100cc6100c736600461066a565b6101c9565b005b6100d661021e565b6040516100e39190610701565b60405180910390f35b6100cc6100fa3660046106a3565b61022d565b61010761030f565b6040516100e3919061076d565b6100d6610367565b61012f61012a36600461068b565b610376565b6040516100e391906107b1565b6100cc61014a36600461066a565b610395565b6100cc61015d3660046106ce565b610415565b6100d661017036600461068b565b6104d4565b61018861018336600461068b565b6104ef565b6040516100e3929190610739565b6101a96101a436600461068b565b610516565b6040516100e391906107bc565b6100cc6101c43660046106a3565b610537565b6000546001600160a01b031633146101fc5760405162461bcd60e51b81526004016101f390610827565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546001600160a01b031633146102575760405162461bcd60e51b81526004016101f390610827565b6000828152600260205260409020546001600160a01b031661028b5760405162461bcd60e51b81526004016101f3906108d3565b600082815260026020526040908190205490517fa85f239ef391393380c18bb17f59f94812d31490da459e5a2ec76344fe20ada8916102d9916001600160a01b039091169084908690610715565b60405180910390a160009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6060600380548060200260200160405190810160405280929190818152602001828054801561035d57602002820191906000526020600020905b815481526020019060010190808311610349575b5050505050905090565b6000546001600160a01b031681565b600081815260026020526040902054600160a01b900460ff165b919050565b6000546001600160a01b031633146103bf5760405162461bcd60e51b81526004016101f390610827565b600080546001600160a01b0319166001600160a01b0383161790556040517fa6a85f15b976d399f39ad43e515e75910bac714bc55eeff6131fb90780d6f7469061040a908390610701565b60405180910390a150565b6000546001600160a01b0316331461043f5760405162461bcd60e51b81526004016101f390610827565b6000828152600260205260409020546001600160a01b03166104735760405162461bcd60e51b81526004016101f3906107d5565b60008281526002602052604090819020805460ff60a01b1916600160a01b84151502179055517fa3187436d05112ce913fd269dbbd3b8de1b863efa86f1d0b7f45427b6da3d527906104c890849084906107c5565b60405180910390a15050565b6000908152600260205260409020546001600160a01b031690565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6003818154811061052657600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146105615760405162461bcd60e51b81526004016101f390610827565b6000828152600260205260409020546001600160a01b0316156105965760405162461bcd60e51b81526004016101f390610884565b6040805180820182526001600160a01b03808416825260016020808401828152600088815260029092528582209451855491511515600160a01b0260ff60a01b19919095166001600160a01b031990921691909117169290921790925560038054928301815590527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01839055517fc16bb3dbd36917c7aa3e76b988c2cd35e74bb230a02fef61e7376d8b4bfaea77906104c89083908590610754565b80356001600160a01b038116811461039057600080fd5b60006020828403121561067b578081fd5b61068482610653565b9392505050565b60006020828403121561069c578081fd5b5035919050565b600080604083850312156106b5578081fd5b823591506106c560208401610653565b90509250929050565b600080604083850312156106e0578182fd5b82359150602083013580151581146106f6578182fd5b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039290921682521515602082015260400190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156107a557835183529284019291840191600101610789565b50909695505050505050565b901515815260200190565b90815260200190565b9182521515602082015260400190565b60208082526032908201527f52656769737472793a3a7377697463684d6f64756c6553746174653a20456e74604082015271393c903237b2b9903737ba1032bc34b9ba1760711b606082015260800190565b60208082526039908201527f52656769737472793a3a6f6e6c79476f7665726e616e63653a2043616c6c206d60408201527f75737420636f6d652066726f6d20676f7665726e616e63652e00000000000000606082015260800190565b6020808252602f908201527f52656769737472793a3a6164644e6577436f6e74726163743a20456e7472792060408201526e30b63932b0b23c9032bc34b9ba399760891b606082015260800190565b6020808252602f908201527f52656769737472793a3a6368616e6765436f6e74726163743a20456e7472792060408201526e3237b2b9903737ba1032bc34b9ba1760891b60608201526080019056fea2646970667358221220dc10d6d62186d733af69a9fffdf2f441e427214d70e6a1d09942e285b8c4d69064736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806399572d6f1161007157806399572d6f1461013c5780639d0d9ffe1461014f578063aa10e9f014610162578063b0b6cc1a14610175578063d93194f114610196578063e63013d9146101b6576100b4565b8063214fa760146100b95780632d2c5b58146100ce57806332fa3561146100ec5780633a8141cc146100ff5780635aa6e675146101145780635c36901c1461011c575b600080fd5b6100cc6100c736600461066a565b6101c9565b005b6100d661021e565b6040516100e39190610701565b60405180910390f35b6100cc6100fa3660046106a3565b61022d565b61010761030f565b6040516100e3919061076d565b6100d6610367565b61012f61012a36600461068b565b610376565b6040516100e391906107b1565b6100cc61014a36600461066a565b610395565b6100cc61015d3660046106ce565b610415565b6100d661017036600461068b565b6104d4565b61018861018336600461068b565b6104ef565b6040516100e3929190610739565b6101a96101a436600461068b565b610516565b6040516100e391906107bc565b6100cc6101c43660046106a3565b610537565b6000546001600160a01b031633146101fc5760405162461bcd60e51b81526004016101f390610827565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546001600160a01b031633146102575760405162461bcd60e51b81526004016101f390610827565b6000828152600260205260409020546001600160a01b031661028b5760405162461bcd60e51b81526004016101f3906108d3565b600082815260026020526040908190205490517fa85f239ef391393380c18bb17f59f94812d31490da459e5a2ec76344fe20ada8916102d9916001600160a01b039091169084908690610715565b60405180910390a160009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6060600380548060200260200160405190810160405280929190818152602001828054801561035d57602002820191906000526020600020905b815481526020019060010190808311610349575b5050505050905090565b6000546001600160a01b031681565b600081815260026020526040902054600160a01b900460ff165b919050565b6000546001600160a01b031633146103bf5760405162461bcd60e51b81526004016101f390610827565b600080546001600160a01b0319166001600160a01b0383161790556040517fa6a85f15b976d399f39ad43e515e75910bac714bc55eeff6131fb90780d6f7469061040a908390610701565b60405180910390a150565b6000546001600160a01b0316331461043f5760405162461bcd60e51b81526004016101f390610827565b6000828152600260205260409020546001600160a01b03166104735760405162461bcd60e51b81526004016101f3906107d5565b60008281526002602052604090819020805460ff60a01b1916600160a01b84151502179055517fa3187436d05112ce913fd269dbbd3b8de1b863efa86f1d0b7f45427b6da3d527906104c890849084906107c5565b60405180910390a15050565b6000908152600260205260409020546001600160a01b031690565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6003818154811061052657600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146105615760405162461bcd60e51b81526004016101f390610827565b6000828152600260205260409020546001600160a01b0316156105965760405162461bcd60e51b81526004016101f390610884565b6040805180820182526001600160a01b03808416825260016020808401828152600088815260029092528582209451855491511515600160a01b0260ff60a01b19919095166001600160a01b031990921691909117169290921790925560038054928301815590527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01839055517fc16bb3dbd36917c7aa3e76b988c2cd35e74bb230a02fef61e7376d8b4bfaea77906104c89083908590610754565b80356001600160a01b038116811461039057600080fd5b60006020828403121561067b578081fd5b61068482610653565b9392505050565b60006020828403121561069c578081fd5b5035919050565b600080604083850312156106b5578081fd5b823591506106c560208401610653565b90509250929050565b600080604083850312156106e0578182fd5b82359150602083013580151581146106f6578182fd5b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039290921682521515602082015260400190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156107a557835183529284019291840191600101610789565b50909695505050505050565b901515815260200190565b90815260200190565b9182521515602082015260400190565b60208082526032908201527f52656769737472793a3a7377697463684d6f64756c6553746174653a20456e74604082015271393c903237b2b9903737ba1032bc34b9ba1760711b606082015260800190565b60208082526039908201527f52656769737472793a3a6f6e6c79476f7665726e616e63653a2043616c6c206d60408201527f75737420636f6d652066726f6d20676f7665726e616e63652e00000000000000606082015260800190565b6020808252602f908201527f52656769737472793a3a6164644e6577436f6e74726163743a20456e7472792060408201526e30b63932b0b23c9032bc34b9ba399760891b606082015260800190565b6020808252602f908201527f52656769737472793a3a6368616e6765436f6e74726163743a20456e7472792060408201526e3237b2b9903737ba1032bc34b9ba1760891b60608201526080019056fea2646970667358221220dc10d6d62186d733af69a9fffdf2f441e427214d70e6a1d09942e285b8c4d69064736f6c63430007060033",
  "devdoc": {
    "events": {
      "ContractChanged(address,address,bytes32)": {
        "params": {
          "moduleId": "keccak of module name",
          "newContract": "address of the contract after update",
          "oldContract": "address of the contract before update"
        }
      },
      "ContractCreated(address,bytes32)": {
        "params": {
          "moduleId": "keccak of module name",
          "newContract": "address of the new contract"
        }
      },
      "GovernanceChanged(address)": {
        "params": {
          "newGovernance": "the new governance address"
        }
      },
      "ModuleSwitched(bytes32,bool)": {
        "params": {
          "isActive": "true if module is switched on, false otherwise",
          "moduleId": "keccak of module name"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addNewContract(bytes32,address)": {
        "params": {
          "_contractAddress": "address of the new module",
          "_id": "keccak256 of module id string"
        }
      },
      "changeContract(bytes32,address)": {
        "params": {
          "_id": "keccak256 of module id string",
          "_newContractAddress": "address of the new module"
        }
      },
      "changeGovernance(address)": {
        "params": {
          "_governance": "the address of the new governance"
        }
      },
      "getModuleKeys()": {
        "returns": {
          "_0": "bytes32[] all module keys"
        }
      },
      "isActive(bytes32)": {
        "params": {
          "_id": "keccak256 of module id string"
        },
        "returns": {
          "_0": "bool activated"
        }
      },
      "moduleAddress(bytes32)": {
        "params": {
          "_id": "keccak256 of module id string"
        },
        "returns": {
          "_0": "address of the module"
        }
      },
      "setPositionManagerFactory(address)": {
        "params": {
          "_positionManagerFactory": "the address of the position manager factory"
        }
      },
      "switchModuleState(bytes32,bool)": {
        "params": {
          "_activated": "boolean to activate or deactivate module",
          "_id": "keccak256 of module id string"
        }
      }
    },
    "stateVariables": {
      "governance": {
        "return": "address of Governance"
      },
      "positionManagerFactoryAddress": {
        "return": "address of PositionManagerFactory"
      }
    },
    "title": "Stores all the modules addresses",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ContractChanged(address,address,bytes32)": {
        "notice": "emitted when a contract address is updated"
      },
      "ContractCreated(address,bytes32)": {
        "notice": "emitted when a contract is added to registry"
      },
      "GovernanceChanged(address)": {
        "notice": "emitted when governance address is changed"
      },
      "ModuleSwitched(bytes32,bool)": {
        "notice": "emitted when a module is switched on/off"
      }
    },
    "kind": "user",
    "methods": {
      "addNewContract(bytes32,address)": {
        "notice": "Register a module"
      },
      "changeContract(bytes32,address)": {
        "notice": "Changes a module's address"
      },
      "changeGovernance(address)": {
        "notice": "change the address of the governance"
      },
      "getModuleKeys()": {
        "notice": "Get the keys for all modules"
      },
      "governance()": {
        "notice": "return the address of Governance"
      },
      "isActive(bytes32)": {
        "notice": "Get the state of a module"
      },
      "moduleAddress(bytes32)": {
        "notice": "Get the address of a module for a given key"
      },
      "positionManagerFactoryAddress()": {
        "notice": "return the address of PositionManagerFactory"
      },
      "setPositionManagerFactory(address)": {
        "notice": "sets the Position manager factory address"
      },
      "switchModuleState(bytes32,bool)": {
        "notice": "Toggle global state of a module"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4799,
        "contract": "contracts/Registry.sol:Registry",
        "label": "governance",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4802,
        "contract": "contracts/Registry.sol:Registry",
        "label": "positionManagerFactoryAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4806,
        "contract": "contracts/Registry.sol:Registry",
        "label": "modules",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(Entry)12357_storage)"
      },
      {
        "astId": 4809,
        "contract": "contracts/Registry.sol:Registry",
        "label": "moduleKeys",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_bytes32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(Entry)12357_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IRegistry.Entry)",
        "numberOfBytes": "32",
        "value": "t_struct(Entry)12357_storage"
      },
      "t_struct(Entry)12357_storage": {
        "encoding": "inplace",
        "label": "struct IRegistry.Entry",
        "members": [
          {
            "astId": 12354,
            "contract": "contracts/Registry.sol:Registry",
            "label": "contractAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12356,
            "contract": "contracts/Registry.sol:Registry",
            "label": "activated",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}